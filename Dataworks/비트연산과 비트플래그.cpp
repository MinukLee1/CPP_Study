#include <iostream>

unsigned char flag;

int main()
{
	// ex) 게임 내에서의 상태이상에 대한 데이터 연산예시 

	// 0b0000 [무적][변이][스턴][공중부양]
	// 무적상태로 만든다 .
	flag = (1 << 3);

	// 변이상태를 추가 (무적 + 변이)
	flag |= (1 << 2);

	// -> 무적상태가 적용되었는지 확인하고싶을시 
	// 
	// bitmask? : 필요없는 정보를 다 날릴수있는 방식 
	bool invincible = ((flag & (1 << 3)) != 0); 
	// 최종결과가 0 인지 아닌지만 확인하여 체크가능 
}

// 비트연산
// when? ->비트단위의 조작이 필요할 떄 (게임서버에서의 아이디조작, 생성 . .)
// -대표적으로 BitFlag 

// - bitwise not
// 단일 숫자의 모든 비트를 대상으로 0은 1, 1은 0으로 뒤바꿈

// & bitwise and 
// 두 숫자의 모든 비트 쌍을 대상으로 and를 한다. 

// | bitwise or 
// 두 숫자의 모든 비트 쌍을 대상으로 or를 한다.

// ^ bitwise xor
// 두 숫자의 모든 비트 쌍을 대상으로 xor를 한다. 

// << >> 비트의 좌,우측 이동 
// 비트열을 N만큼 이동 
// 좌 : 왼쪽의 넘치는 N개의 비트는 버림 , 새로 생성되는 N개의 비트는 0
// 우 : 부호 비트가 존재할 경우 부로 비트를 따라감 else, 0

